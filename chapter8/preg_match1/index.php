<?php
    /*Регулярные вырадения - это небольшой фрагмент кода, который описывает образец текста, содержащийся в ваших данных.
    Регулярные выражения используются для поиска и замены образцов текста. Они поддерживаются многими системными
    окружениями, языками программирования, а также языками, предназначенными для веб-разработок(PHP). */
$text = 'PHP рулит!';

if (preg_match('/PHP/', $text)) {    /* '/' - Слеш является разделителем, а слово PHP искомым значением*/
    $output = '$text содержит строку &ldquo;PHP&rdquo;.';
}
else {
    $output = '$text не содержит строку &ldquo;PHP&rdquo;.';
}
include 'output.html.php';

    /*Регулярные выражения чувствительны к регистру. Чтобы игнорировать регистр во время поиска,
    используют модификатор шаблонов.
    Модификаторы шаблонов - это односимвольные метки, которые устанавливают в выражении после закрывающего разделителя.
      Для поиска без учета регистра служит модификатор i.*/

$text = 'Что такое Php?';

if (preg_match('/PHP/i', $text)) {
    $output = '$text содержит строку &ldquo;PHP&rdquo;.';
}
else {
    $output = '$text не содержит строку &ldquo;PHP&rdquo;.';
}
include 'output.html.php';

    /*Регулярные выражения - это почти что полноценный язык программирования.
    Они могут включать необычайно разнообразные символы, каждый из которых имеет собственное значение.
    Эти символы позволяют подробнейшим образом описать шаблон строки, поиском которой занимается функция preg_match.

        Символы:
    -(^) - Циркумфлекс, обозначает начало строки, используется для позиционирования и исключает любые символы.
    -($) - Знак доллара, обозначает конец строки, используется для позиционирования и исключает любые символы.
    -(.) - Точка, соответствует любому символу, кроме перехода на новую строку (\n).
    -(*) - Звездочка, требует, чтобы предыдущий символ повторялся ноль и более раз.
            При совпадении регулярного выражения с частью строки звездочка становится жадной и поглощает
            как можно больше символов. Например, в строке «слово там, слово сям» шаблону /слово.* /будет
            соответствовать фрагмент «слово там, слово». Для минимального совпадения, когда нужно
            только «слово там», используйте знак вопроса.
    -(+) - Плюс, требует, чтобы предыдущий символ повторялся один раз или более.
            Если не использовать знак вопроса, то при совпадении регулярного выражения с частью строки плюс
            становится жадным, как звездочка.
    -(?) - Знак вопроса, делает предыдущий символ необязательным.
            Если поместить его после плюса или звездочки, он начнет требовать, чтобы совпадение для предыдущего
            символа было минимальным и охватывало как можно меньше знаков. Такое совпадение называют нежадным,
            или ленивым.
    -(|) - Вертикальная черта, обязывает регулярное выражение соответствовать только одному из шаблонов - тому,
            что находится справа или слева от нее.
    -( ) - Круглые скобки, определяют неразрывгую группу символов, к которым можно применять такие модификаторы,
            как *, + или ? (их указывают после закрывающей скобки). В дальнейшем на эти группы ссылаются в
            регулярных выражениях, чтобы получать соответствующие фрагменты строки.
    -[ ] - Квадратные скобки, определяют класс символов, при этом ищется соответствие одному из символов,
            перечисленных внутри скобок.
            Такой класс может содержать точный список символов, например [aqz], что эквивалентно (a|q|z),
            или целый диапазон, например [a-z], что эквивалентно (a|b|с|...|z). Он также может соответствовать
            любому символу, который не входит в класс: для этого сразу после открывающей скобки помещают
            модификатор ^. Например, [^а] соответствует любому символу, кроме 'а'.
    
    
        Управляющие последовательности - соответствуют определенному типу символов или символам, которые сложно
                        набрать с клавиатуры.
    - \n - переход на новую строку.
    - \r - возврат каретки.
    - \t - символ табуляции.
    - \s - любые пробельные символы, включая переход на новую строку, возврат каретки и табуляции. Тоже, что и [\n\r\t]
    - \S - любой непробельный символ. Тоже, что и [^ \n\r\t].
    - \d - любая цифра. Тоже, что и [0-9].
    - \D - любой символ, кроме цифры. Тоже, что и [^0-9].
    - \w - любой набор символов(слово). Тоже, что и [a-zA-Z0-9_].
    - \W - любой набор символов(не слово). Тоже, что и [^a-zAZ0-9_].
    - \b - обозначает границы слова: его начало и конец.
    - \B - обозначает место в строке, которое не является границей слова.
    - \\ - соответствует обратному слешу.
            Регулярное выражение, которое реагирует на строку «\п», должно иметь вид /\\п/, но никак не /\п/
            (который соответствует переходу на новую строку). Если вам нужно найти строку «\\»,
            регулярное выражение должно выглядеть как /\\\\/ .

    */