<?php
    /*Волшебные кавычки - метод защиты от внедрения SQL-кода*/
if (get_magic_quotes_gpc()) {
    $process = array(&$_GET, &$_POST, &$_COOKIE, &$_REQUEST);
    while (list($key, $val) = each($process)) {
        foreach ($val as $k => $v) {
            unset($process[$key][$k]);
            if (is_array($v)) {
                $process[$key][stripslashes($k)] = $v;
                $process[] = &$process[$key][stripslashes($k)];
            } else {
                $process[$key][stripslashes($k)] = stripslashes($v);
            }
        }
    }
    unset($process);
}
    /* Проверяем нажата ли кнопка "Добавить шутку"  */
if (isset($_GET['addjoke'])) { /* если существует элемент/переменная addjoke в глоб. массиве GET */
    include 'form.html.php'; /* если да, то выводим форму добавления шутки */
    exit();
}

include 'db.inc.php'; /*Подключение к базе данных*/

        /*Пользователь заполнил форму и нажал кнопку "Отправить"*/
if (isset($_POST['joketext'])) { /*Проверяем наличие переменной joketext в запросе*/
    include 'db.inc.php';
    try {
        /*Параметризированный запрос - SQL-запрос, отправляющий серверу псевдопеременные, которые при
            формировании настоящего запроса заменяются необходимыми значениями.
            (непосредственно выполнения запроса в этот момент не происходит)*/

        $sql = 'INSERT INTO joke SET 
            joketext = :joketext, /* :joketext - псевдопеременная для параметризированного запроса*/
            jokedate = CURDATE()';  /*Спец. MySQL функция CURDATE, которая добавляет сегоднешнюю дату.*/
        $s = $pdo->prepare($sql); /*из объекта PDO($pdo) вызывается метод prepare которому в качестве аргумента
       передается SQL-запрос, который направляется серверу MySQL, чтобы подготовить его к последующему
       выполнению команд. Обработать запрос MySQL пока не в состоянии - ему не хватает значения для столбца joketext.
            Метод prepare возвращает объект PDOStatement (того самого типа,с помощью которого мы получаем результаты
            выполнения команды SELECT) и сохраняет его в переменную $s.*/

        /*Теперь, когда MySQL-сервер готов к выполнению запроса, ему можно отправить пропущенные значения,
        вызвав метод bindValue из объекта PDOStatement ($s).
            Метод bindValue вызывается при передаче каждого значения.*/
        $s->bindValue(':joketext', $_POST['joketext']); /*В качестве аргумента кроме самого значения $_POST['joketext'],
                        ему передается псевдопеременная :joketext, которую необходимо заменить.*/
            /*Сервер MySQL знает, что он получает содержимое отдельных переменных, а не SQL-код.
            Исчезает риск, что отправленные символы интерпретируются как команды на языке SQL.
            Таким образом, использование параметризированных запросов исключает уязвимости, связанные с внедрением
            SQL-кода.*/
        $s->execute(); /*из объекта PDOStatement вызывается метод execute, чтобы сервер MySQL смог выполнить запрос
                         с теми значениями, которые ему предоставили.*/
    }
    catch (PDOException $e){
        $error = 'Ошибка при добавлении шутки: ' . $e->getMessage();
        include 'error.html.php';
        exit();
    }
        /*Функция header предоставляет серверу средства для отправки специальных ответов и позволяет
        возвращать браузеру особые заголовки.*/
    header('Location: .'); /*отсылаем заголовок Location, чтобы объявить о перенаправлении.
                Точка . обозначает текущий документ/директорию т.е. нужно перезагрузить текущую директорию
                после добавления шутки в базу данных*/
    exit();
}
        /* Удаление шутки*/
if(isset($_GET['deletejoke'])){
    include 'db.inc.php';
    try{
        $sql = 'DELETE FROM joke WHERE id = :id'; /*:id - псевдопеременная для параметризированного запроса*/
        $s = $pdo->prepare($sql);  /*из объекта PDO($pdo) вызывается метод prepare которому в качестве аргумента
       передается SQL-запрос, который направляется серверу MySQL, чтобы подготовить его к последующему
       выполнению команд. */
        $s->bindValue(':id', $_POST['id']); /*Заменяем псевдопеременную :id на $_POST['id']*/
        $s->execute();
    }
    catch (PDOException $e){
        $error = 'Ошибка при удалении шутки: ' . $e->getMessage();
        include 'error.html.php';
        exit();
    }
    header('Location: .');
    exit();
}
/*....................................................................*/

include 'db.inc.php';
try{
    $sql = 'SELECT joke.id, joketext, name, email /*Выбираем поля id таблицы joke, joketext, name, email*/
          FROM joke INNER JOIN author /*внутренне объединённо из таблиц joke и author*/
          ON authorid = author.id'; /*условия связанностей таблиц - это совпадение значений ячеек authorid и author.id*/
    
    $result = $pdo->query($sql); /*вытаскиваем данные из базы данных и сохраняем в переменную result*/
    /*Метод query похож на метод ехес тем, что в качестве аргумента принимает SQL-запрос, направленный
      базе данных. Отличие заключается в том, что он возвращает объект PDOStatement, который представляет
      собой результирующий набор, иначе говоря, список всех строк (записей), полученных в результате запроса*/
}
catch(PDOException $e){ /*(Исключение)Блок catch перехватит объект PDOException и поместит его в переменную $e.*/
        /*Объект PDOException - разновидность исключений, которую выбрасывает new PDO.*/
    $error = 'Ошибка при извлечении шуток: ' . /*Внутри блока переменной $error будет присвоено сообщение,
                                                    информирующее пользователя о том, что произошло.*/
        $e->getMessage(); /*Метод getMessage вызывается из объекта, хранящегося в переменной  $е,
        и вставляет возвращенное им значение в конец сообщения об ошибке, используя оператор конкатенации (.)*/
    include 'error.html.php'; /*Подключаем шаблон на котором отображается значение $error(ошибки).*/
    exit();
}
    /*Тут заменим цикл while на цикл foreach*/
foreach ($result as $row){  /*Делаем ассоциативный массив - массив, ассоциирует(сопоставляет) значения с индексами(текстом и др.)*/
    $jokes[] = array(
        'id' => $row['id'],
        'text' => $row['joketext'],
        'name' => $row['name'],
        'email' => $row['email']
    );
}
include 'jokes.html.php';